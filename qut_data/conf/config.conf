# Some comments



models {
	
	model1 = "http://vitro.mannlib.cornell.edu/default/vitro-kb-2"
	
	model2 = "http://vitro.mannlib.cornell.edu/filegraph/tbox/vivo-core-1.4.owl"
	
	model3 = "http://vitro.mannlib.cornell.edu/default/vitro-kb-applicationMetadata"
	
	model4 = "http://vitro.mannlib.cornell.edu/filegraph/tbox/vitro-0.7.owl"
	
	model5 = "http://vitro.mannlib.cornell.edu/filegraph/tbox/vitroPublic.owl"
	
	model6 = "http://vitro.mannlib.cornell.edu/default/asserted-tbox"
	
	model7 = "http://vitro.mannlib.cornell.edu/ns/vitro/sdb/metadata"	

}


appProperties {
  #baseNS =  "http://www.localhost.com/individual/"
  baseNS =  "http://researchdatafinder.qut.edu.au/individual/"
}

namespaces {

  xsd = 		"http://www.w3.org/2001/XMLSchema#"
  xsi = 		"http://www.w3.org/2001/XMLSchema-instance"
  oai = 		"http://www.openarchives.org/OAI/2.0/"
  bibo = 		"http://purl.org/ontology/bibo/"
  foaf = 		"http://xmlns.com/foaf/0.1/"
  dcterms = 	"http://purl.org/dc/terms/"
  dc = 			"http://purl.org/dc/elements/1.1/"
  ands = 		"http://www.ands.org.au/ontologies/ns/0.1/VITRO-ANDS.owl#"
  skos = 		"http://www.w3.org/2004/02/skos/core#"
  database = 	"http://www.oclc.org/pears/"
  rdf = 		"http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  rdfs = 		"http://www.w3.org/2000/01/rdf-schema#"
  vivo = 		"http://vivoweb.org/ontology/core#"
  vitro = 		"http://vitro.mannlib.cornell.edu/ns/vitro/0.7#"
  vitroPublic = "http://vitro.mannlib.cornell.edu/ns/vitro/public#"
  vitroRole = 	"http://vitro.mannlib.cornell.edu/ns/vitro/role#"
  owl = 		"http://www.w3.org/2002/07/owl#"
  rifcs = 		"http://ands.org.au/standards/rif-cs/registryObjects"
  event = 		"http://purl.org/NET/c4dm/event.owl#"
  for = 		"http://www.ands.org.au/ontologies/ns/for/2008/"  
  seo = 		"http://www.ands.org.au/ontologies/ns/seo/2008/"
  qut = 		"http://www.qut.edu.au/ontologies/vivoqut#"  
  
}

classes {

  thing = "owl:Thing"
  flagThing = "vitro:Flag1Value1Thing"
  partyActivityRecordsType = "qut:partyActivityRecordsType"
  collectionActivityServiceRecordsType = "qut:collectionActivityServiceRecordsType"
  allRecordsType = "qut:allRecordsType"
  customProperty = "qut:customProperty"
  
  people  =  "qut:people"
  group  =  "qut:group"
  administrativePosition  =  "qut:administrativePosition";
  researcher  =  "qut:researcher"
  
  activities  =  "qut:activities"
  event  =  "qut:event"
  award  =  "qut:award"
  course  =  "qut:course"
  program  =  "qut:program"
  project  =  "qut:project"
  
  dataCollections  =  "qut:dataCollections"
  repository  =  "qut:repository"
  registry  =  "qut:registry"
  catalogueOrIndex  =  "qut:catalogueOrIndex"
  collection  =  "qut:collection"
  researchDataSet  =  "qut:researchDataSet"
  
  service  =  "qut:service"
  annotate  =  "qut:annotate"
  report  =  "qut:report"
  syndicateRSS  =  "qut:syndicateRSS"
  syndicateATOM  =  "qut:syndicateATOM"
  harvestOAIPMH  =  "qut:harvestOAIPMH"
  SearchZ3950  =  "qut:SearchZ3950"
  searchSRU  =  "qut:searchSRU"
  searchSRW  =  "qut:searchSRW"
  create  =  "qut:create"
  transform  =  "qut:transform"
  searchOpenSearch  =  "qut:searchOpenSearch"
  assemble  =  "qut:assemble"
  searchHTTP  =  "qut:searchHTTP"
  generate  =  "qut:generate"
  
  softwareAndCode  =  "qut:softwareAndCode"
  code  =  "qut:code"
  software  =  "qut:software"
  
  address  =  "vivo:Address"
}
  
properties {

  type  =  "rdf:type"
  label  =  "rdfs:label"
  mostSpecificType  =  "vitro:mostSpecificType"
  
  # Object Properties.
  
  isApprovedByOoR = "qut:isApprovedByOoR"
  isApprovedbyLibrary = "qut:isApprovedbyLibrary"
  publishRecord   =  "qut:publishRecord"
  internalorExternalFunding  =  "qut:internalorExternalFunding"
  researchAreas  =  "qut:researchAreas"
  firstName  =  "qut:firstName"
  supressFirstName = "qut:supressFirstName"
  surname  =  "qut:surname"
  supressSurname = "qut:supressSurname"
  prefefredTitle  =  "qut:prefefredTitleText"
  supressTitle = "qut:supressTitle"
  spatialCoverage  =  "qut:spatialCoverage"
  existenceDates = "qut:existenceDates"
  temporalCoverage  =  "qut:temporalCoverage"
  datesOfDevelopment  =  "qut:datesOfDevelopment"
  dates  =  "qut:dates"
  qutEPrints  =  "qut:qutEPrints"
  relatedMetadata  =  "qut:relatedMetadata"
  relatedInformation  =  "qut:relatedInformation"
  mailingAddress  =  "vivo:mailingAddress"
  academicProfile  =  "qut:academicProfile"
  website  =  "qut:website"
  abbreviation   =  "qut:abbreviation"
  biography  =  "qut:biography"
  nlaPartyIdentifier = "qut:nlaPartyIdentifier"
  ordcIdentifier  =  "qut:ordcIdentifier"
  scopusAuthorID  =  "qut:scopusAuthorID"
  thomsonReutersResearcherID  =  "qut:thomsonReutersResearcherID"
  emailAddress  =  "qut:emailAddress"
  predecessorOrganisation  =  "qut:predecessorOrganisation"
  successorOrganisation  =  "qut:successorOrganisation"
  organizationWithin  =  "qut:organizationWithin"
  affiliatedInstitution  =  "qut:affiliatedInstitution"
  currentRelInfoMemberOf  =  "qut:currentRelInfoMemberOf"
  collaborator  =  "qut:collaborator"
  clinicalActivities  =  "qut:clinicalActivities"
  publisherOfQut  =  "qut:publisherOfQut"
  partnerInstitution = "qut:partnerInstitution"
  collectionOrSeriesEditorOf  =  "qut:collectionOrSeriesEditorOf"
  reviewerOf  =  "qut:reviewerOf"
  organiserOf   =  "qut:organiserOf"
  serviceToTheProfession  =  "qut:serviceToTheProfession"
  outreachService  =  "qut:outreachService"
  eligibleFor  =  "qut:eligibleFor"
  adviseeIn  =  "qut:adviseeIn"
  otherIdentifierType  =  "qut:otherIdentifierType"
  facultyOrDepartmentName  =  "qut:facultyOrDepartmentName"
  partOf  =  "qut:partOf"
  digitalObjectIdentifier  =  "qut:digitalObjectIdentifier"
  primaryContact  =  "qut:primaryContact"
  dataCitation  =  "qut:dataCitation"
  citationStyle  =  "qut:citationStyle"
  localKey  =  "qut:localKey"
  mediafluxIdentifier  =  "qut:mediafluxIdentifier"
  dataCiteDOI  =  "qut:dataCiteDOI"
  copyrightInfo  =  "qut:copyrightInfo"
  copyrightURL  =  "qut:copyrightURL"
  accessRightsInfo  =  "qut:accessRightsInfo"
  licenceURI  =  "qut:licenceURI"
  licence   =  "qut:licence"
  phone = "qut:phone"
  fax = "qut:fax"
  dateRecordCreated  =  "qut:dateRecordCreated"
  dateRecordModified  =  "qut:dateRecordModified"
  fundingScheme = "qut:fundingScheme"
  grantor = "qut:grantor"
  AOUName  =  "qut:AOUName"
  RMProjectCode  =  "qut:RMProjectCode"
  projectStatus  =  "qut:projectStatus"
  RMPersonCode  =  "qut:RMPersonCode"
  locationOfDigitalData  =  "qut:locationOfDigitalData"
  accessPolicyURL  =  "qut:accessPolicyURL"
  position  =  "qut:position"
  recordInitiallyCreatedBy  =  "qut:recordInitiallyCreatedBy"
  linkToexternalRecords  =  "qut:linkToexternalRecords"
  recordOtherInfo  =  "qut:recordOtherInfo"
  recordPublishedByInfo  =  "qut:recordPublishedByInfo"
  lastHarvestedDate = "qut:lastHarvestedDate"
  previousHarvestedDate = "qut:previousHarvestedDate"
  contactInfo = "qut:contactInfo"
  RDRDataUpload = "qut:RDRDataUpload"
  
  # Data Properties.
 
  infoType1  =  "qut:infoType1"
  infoType2  =  "qut:infoType2"
  infoType3  =  "qut:infoType3"
  freeTextValue1  =  "qut:freeTextValue1"
  freeTextValue2  =  "qut:freeTextValue2"
  freeTextValue3  =  "qut:freeTextValue3"
  freeTextValue4  =  "qut:freeTextValue4"
  freeTextValue5  =  "qut:freeTextValue5"
  freeTextValue6  =  "qut:freeTextValue6"
  freeTextValue7  =  "qut:freeTextValue7"
  
  address1 = "vivo:address1"
  address2 = "vivo:address2"
  address3 = "vivo:address3"
  address4 = "vivo:address4"
  addressCity = "vivo:addressCity"
  addressCountry = "vivo:addressCountry"
  postcode = "vivo:addressPostalCode"
  addressState = "vivo:addressState" 
  
  localKeyCounter  =  "qut:localKeyCounter"
  resourceURICounter  =  "qut:resourceURICounter"
}

relations {
  hasAssociationWith  =  "qut:hasAssociationWith"
  isPartOf  =  "qut:isPartOf"
  hasPart  =  "qut:hasPart"
  isFundedBy  =  "qut:isFundedBy"
  isFunderOf  =  "qut:isFunderOf"
  isOutputOf  =  "ands:isOutputOf"
  hasOutput  =  "ands:hasOutput"
  isManagerOf  =  "ands:isManagerOf"
  isManagedBy  =  "ands:isManagedBy"
  isOwnedBy  =  "ands:isOwnedBy"
  isOwnerOf  =  "ands:isOwnerOf"
  hasParticipant  =  "ands:hasParticipant"
  isParticipantIn  =  "ands:isParticipantIn"
  describes =  "ands:describes"
  isDescribedBy  =  "ands:isDescribedBy"
  isLocatedIn  =  "ands:isLocatedIn"
  isLocationFor  =  "ands:isLocationFor"
  isDerivedFrom  =  "qut:isDerivedFrom"
  hasDerivedCollection  =  "qut:hasDerivedCollection"
  hasCollector  =  "ands:hasCollector"
  isCollectorOf  =  "ands:isCollectorOf"
  enriches  =  "qut:enriches"
  isEnrichedBy  =  "qut:isEnrichedBy"
  supports  =  "ands:supports"
  isSupportedBy  =  "ands:isSupportedBy"
  produces  =  "qut:produces"
  isProducedBy  =  "qut:isProducedBy"
  presents  =  "qut:presents"
  isPresentedBy  =  "qut:isPresentedBy"
  makesAvailable  =  "qut:makesAvailable"
  isAvailableThrough  =  "qut:isAvailableThrough"
  operatesOn  =  "qut:operatesOn"
  isOperatedOnBy  =  "qut:isOperatedOnBy"
  addsValueTo  =  "qut:addsValueTo"
  hasValueAddedBy  =  "qut:hasValueAddedBy"
  hasMember  =  "qut:hasMember"
  isMemberOf  =  "qut:isMemberOf"
  hasPrincipalInvestigator   =  "qut:hasPrincipalInvestigator"
  isPrincipalInvestigatorOf  =  "qut:isPrincipalInvestigatorOf"
}

roles {
  nobody =  "vitroRole:nobody" 
  public =  "vitroRole:public"
  selfEditor =  "vitroRole:selfEditor"
  editor =  "vitroRole:editor"
  curator =  "vitroRole:curator"  
  root =  "vitroRole:dbAdmin"
}

database {
	#url = "jdbc:mysql://localhost/vivo"
	url = "jdbc:mysql://researchdatafinder.qut.edu.au/vivo"
	user = "vivo"
	pwd = "vivovivo"
}


numberOfWorkflows = 3


workflow {

	out = "export2.rdf"
	model : "http://vitro.mannlib.cornell.edu/filegraph/tbox/vitro-0.7.owl"  
}





